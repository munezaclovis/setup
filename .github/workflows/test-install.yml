name: Test Installation Script

on:
  push:
    branches: [ main, master ]
    paths:
      - 'install.sh'
      - '.zshrc'
      - '.github/workflows/test-install.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'install.sh'
      - '.zshrc'
      - '.github/workflows/test-install.yml'
  workflow_dispatch:

jobs:
  test-install:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Make install script executable
      run: chmod +x install.sh
      
    - name: Verify script syntax
      run: bash -n install.sh
      
    - name: Run install script
      run: ./install.sh
      
    - name: Verify Homebrew installation
      run: |
        which brew
        brew --version
        
    - name: Verify Oh My Zsh installation
      run: |
        test -d "$HOME/.oh-my-zsh"
        echo "✅ Oh My Zsh installed"
        
    - name: Verify zsh plugins installation
      run: |
        test -d "$HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
        test -d "$HOME/.oh-my-zsh/custom/plugins/fzf-tab"
        echo "✅ Zsh plugins installed"
        
    - name: Verify essential tools
      run: |
        echo "🔍 Verifying essential tools installation..."
        
        # Update PATH to include Bun installation directory
        export PATH="$HOME/.bun/bin:$PATH"
        
        tools=(
          "git:Git version control"
          "docker:Docker containerization"
          "gh:GitHub CLI"
          "aws:AWS CLI"
          "zoxide:Smart cd command"
          "starship:Cross-shell prompt"
          "eza:Modern ls replacement"
          "fnm:Fast Node Manager"
          "pnpm:Package manager"
          "bun:JavaScript runtime"
        )
        
        all_found=true
        
        for tool_info in "${tools[@]}"; do
          tool="${tool_info%%:*}"
          description="${tool_info##*:}"
          
          if command -v "$tool" >/dev/null 2>&1; then
            echo "✅ $tool ($description) - $(which $tool)"
          else
            echo "❌ $tool ($description) - NOT FOUND"
            all_found=false
          fi
        done
        
        if [ "$all_found" = true ]; then
          echo ""
          echo "🎉 All essential tools verified successfully!"
        else
          echo ""
          echo "⚠️  Some tools are missing. Installation may have failed."
          exit 1
        fi
        
    - name: Verify .zshrc setup
      run: |
        test -f "$HOME/.zshrc"
        echo "✅ .zshrc file exists"
        
    - name: Start Docker Desktop and verify networks
      run: |
        echo "🐳 Starting Docker Desktop..."
        open -a Docker --background
        
        # Wait for Docker to be ready
        echo "⏳ Waiting for Docker to start..."
        timeout=120
        while ! docker info >/dev/null 2>&1 && [ $timeout -gt 0 ]; do
          sleep 3
          timeout=$((timeout - 3))
          echo "  Waiting... ($timeout seconds remaining)"
        done
        
        if docker info >/dev/null 2>&1; then
          echo "✅ Docker is running"
          docker --version
          
          # Verify Docker networks were created
          echo "🔍 Checking Docker networks..."
          if docker network ls | grep -q traefik; then
            echo "✅ Traefik network found"
          else
            echo "❌ Traefik network not found"
            exit 1
          fi
          
          if docker network ls | grep -q haproxy; then
            echo "✅ HAProxy network found"  
          else
            echo "❌ HAProxy network not found"
            exit 1
          fi
          
          echo "✅ Docker networks verified"
        else
          echo "❌ Docker failed to start within timeout"
          echo "ℹ️  This might be expected in CI environment"
          echo "ℹ️  Checking if Docker CLI tools are available..."
          
          if command -v docker >/dev/null 2>&1; then
            echo "✅ Docker CLI tools are installed"
            docker --version
          else
            echo "❌ Docker CLI tools not found"
            exit 1
          fi
        fi
        
    - name: Verify directories created
      run: |
        test -d "$HOME/.local/bin"
        test -d "$HOME/.local/share"
        test -d "$HOME/.docker/completions"
        test -d "$HOME/.eza/completions/zsh"
        echo "✅ Required directories created"
        
    - name: Verify placeholder files
      run: |
        test -f "$HOME/.env"
        test -f "$HOME/.bash_aliases"
        test -f "$HOME/.fnm.sh"
        test -f "$HOME/.functions.sh"
        echo "✅ Placeholder files created"
        
    - name: Verify FZF installation
      run: |
        test -d "$HOME/.local/share/fzf"
        test -f "$HOME/.local/share/fzf/bin/fzf"
        echo "✅ FZF installed"
        
    - name: Test zsh configuration loading
      run: |
        # Test that zshrc loads without errors
        zsh -c "source $HOME/.zshrc && echo 'ZSH config loaded successfully'"
        
    - name: Test traefik docker-compose syntax
      run: |
        cd traefik
        docker-compose config
        echo "✅ Docker Compose configuration is valid"
        
    - name: Generate installation report
      run: |
        echo "## Installation Test Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Successfully Installed Tools:" >> $GITHUB_STEP_SUMMARY
        echo "- Homebrew: $(brew --version | head -1)" >> $GITHUB_STEP_SUMMARY
        echo "- Git: $(git --version)" >> $GITHUB_STEP_SUMMARY
        echo "- Docker: $(docker --version)" >> $GITHUB_STEP_SUMMARY
        echo "- GitHub CLI: $(gh --version | head -1)" >> $GITHUB_STEP_SUMMARY
        echo "- AWS CLI: $(aws --version)" >> $GITHUB_STEP_SUMMARY
        echo "- Node.js (via fnm): $(fnm current 2>/dev/null || echo 'Not set')" >> $GITHUB_STEP_SUMMARY
        echo "- Bun: $(bun --version)" >> $GITHUB_STEP_SUMMARY
        echo "- Starship: $(starship --version)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📁 Verified Directory Structure:" >> $GITHUB_STEP_SUMMARY
        echo "- ~/.oh-my-zsh" >> $GITHUB_STEP_SUMMARY
        echo "- ~/.local/bin" >> $GITHUB_STEP_SUMMARY
        echo "- ~/.local/share/fzf" >> $GITHUB_STEP_SUMMARY
        echo "- ~/.docker/completions" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🐳 Docker Status:" >> $GITHUB_STEP_SUMMARY
        if docker info >/dev/null 2>&1; then
          echo "- Docker Desktop: Running" >> $GITHUB_STEP_SUMMARY
          echo "- Networks: traefik, haproxy created" >> $GITHUB_STEP_SUMMARY
        else
          echo "- Docker Desktop: Installed but not running in CI" >> $GITHUB_STEP_SUMMARY
          echo "- CLI tools: Available" >> $GITHUB_STEP_SUMMARY
        fi